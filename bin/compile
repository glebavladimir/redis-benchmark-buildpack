#!/usr/bin/env bash

set -e            # fail fast
set -o pipefail   # do not ignore exit codes when piping output
set -o posix      # more strict failures in subshells
set -x            # enable debugging

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
BUILD_DIR=$1
CACHE_DIR=$2

REDIS_VERSION="3.0.1"

# Copy app to build dir
cp -r $DIR/../app/* $BUILD_DIR/
# Copy start up script build dir
cp -r $DIR/boot.sh $BUILD_DIR/

# Install Redis
if [ ! -d $CACHE_DIR/redis_$REDIS_VERSION ]; then
  echo "Fetching and installing Redis $REDIS_VERSION"
  mkdir -p $CACHE_DIR/redis_$REDIS_VERSION
  cd $CACHE_DIR/redis_$REDIS_VERSION
  curl -vv -OL "http://download.redis.io/releases/redis-$REDIS_VERSION.tar.gz"
  tar zxf "redis-$REDIS_VERSION.tar.gz"
  cd "redis-$REDIS_VERSION"
  make
  make PREFIX=$CACHE_DIR/redis_$REDIS_VERSION install
  mkdir -p $BUILD_DIR/cmd/
  cp -r $CACHE_DIR/redis_$REDIS_VERSION/redis-$REDIS_VERSION/src/redis-benchmark $BUILD_DIR/cmd/redis-benchmark
else
  echo "Installing redis from cache"
  mkdir -p $BUILD_DIR/cmd/
  cp -r $CACHE_DIR/redis_$REDIS_VERSION/redis-$REDIS_VERSION/src/redis-benchmark $BUILD_DIR/cmd/redis-benchmark
fi  

# Install Ruby
if [ ! -d $CACHE_DIR/ruby/ruby-1.9.3 ]; then
  echo "Fetching and unpacking Ruby 1.9.3"
  mkdir -p $CACHE_DIR/ruby
  cd $CACHE_DIR/ruby
  curl -vv -kOL  "https://cache.ruby-lang.org/pub/ruby/ruby-1.9.3-p547.tar.gz"
  tar zxf "ruby-1.9.3-p547.tar.gz"
else
  echo "Using Ruby 1.9.3 from cache"
fi

echo "Installing Ruby"
cd $CACHE_DIR/ruby/ruby-1.9.3-p547
make
make install

# Install Ruby gems
mkdir -p $BUILD_DIR/ruby_gems
mkdir -p $BUILD_DIR/ruby_gems_spec
export GEM_HOME=$BUILD_DIR/ruby_gems
export GEM_SPEC_CACHE=$BUILD_DIR/ruby_gems_spec
export PATH=$PATH:$GEM_HOME/bin
$BUILD_DIR/ruby/bin/gem env
gem install bundler --no-rdoc --no-ri 
bundle install --gemfile=$DIR/../app/Gemfile

ls -alF $BUILD_DIR

echo "Finishing compile"
