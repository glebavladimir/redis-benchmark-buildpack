#!/usr/bin/env bash

set -e            # fail fast
set -o pipefail   # do not ignore exit codes when piping output
set -o posix      # more strict failures in subshells
#set -x            # enable debugging

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
BUILD_DIR=$1
CACHE_DIR=$2

REDIS_VERSION="5.0.5"

# Copy app to build dir
cp -r $DIR/../app/* $BUILD_DIR/

# Copy start up script build dir
cp -r $DIR/boot.sh $BUILD_DIR/

# Install Redis
if [ ! -d $CACHE_DIR/redis_$REDIS_VERSION ]; then
  echo "Fetching and installing Redis $REDIS_VERSION"
  mkdir -p $CACHE_DIR/redis_$REDIS_VERSION
  cd $CACHE_DIR/redis_$REDIS_VERSION
  curl -vv -OL "http://download.redis.io/releases/redis-$REDIS_VERSION.tar.gz"
  tar zxf "redis-$REDIS_VERSION.tar.gz"
  cd "redis-$REDIS_VERSION"
  make
  make PREFIX=$CACHE_DIR/redis_$REDIS_VERSION install
  mkdir -p $BUILD_DIR/cmd/
  cp -r $CACHE_DIR/redis_$REDIS_VERSION/redis-$REDIS_VERSION/src/redis-benchmark $BUILD_DIR/cmd/redis-benchmark
else
  echo "Installing redis from cache"
  mkdir -p $BUILD_DIR/cmd/
  cp -r $CACHE_DIR/redis_$REDIS_VERSION/redis-$REDIS_VERSION/src/redis-benchmark $BUILD_DIR/cmd/redis-benchmark
fi  

# Prepare Install Ruby Gems
mkdir -p $BUILD_DIR/ruby_gems
mkdir -p $BUILD_DIR/ruby_gems_spec

# Set environment for Ruby Gems installation
export GEM_HOME=$BUILD_DIR/ruby_gems
export GEM_SPEC_CACHE=$BUILD_DIR/ruby_gems_spec
export PATH=$PATH:$GEM_HOME/bin

# Perform install of Ruby Gems
gem install bundler --no-rdoc --no-ri 
bundle install --gemfile=$DIR/../app/Gemfile
